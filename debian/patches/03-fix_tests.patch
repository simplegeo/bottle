From: David Paleino <dapal@debian.org>
Subject: fix various issues in the testsuite
Origin: vendor
Forwarded: no

---
 run_tests.sh          |    1 -
 test/test_environ.py  |    8 ++++----
 test/test_sendfile.py |    2 +-
 test/test_server.py   |    5 +++--
 4 files changed, 8 insertions(+), 8 deletions(-)

--- python-bottle.orig/test/test_server.py
+++ python-bottle/test/test_server.py
@@ -45,7 +45,7 @@ class TestServer(unittest.TestCase):
                 if not self.p.poll() is None: break
             rv = self.p.poll()
             if rv is None:
-                raise AssertionError("Server took to long to start up.")
+                raise AssertionError("Server took too long to start up.")
             if rv is 128: # Import error
                 tools.warn("Skipping %r test (ImportError)." % self.server)
                 self.skip = True
@@ -69,7 +69,7 @@ class TestServer(unittest.TestCase):
                 if tob('warning') in line.lower():
                     tools.warn(line.strip().decode('utf8'))
                 elif tob('error') in line.lower():
-                    raise AssertionError(line.strip().decode('utf8'))
+                    raise AssertionError("%s: %s" % (self.server, line.strip().decode('utf8')))
 
     def fetch(self, url):
         try:
--- python-bottle.orig/run_tests.sh
+++ python-bottle/run_tests.sh
@@ -26,7 +26,6 @@ function runtest {
 
 
 
-runtest python2.5 test
 runtest python2.6 test
 runtest python2.7 test
 
--- python-bottle.orig/test/test_environ.py
+++ python-bottle/test/test_environ.py
@@ -78,8 +78,8 @@ class TestRequest(unittest.TestCase):
         request.bind(e)
         request['HTTP_SOME_OTHER_HEADER'] = 'some other value'
         self.assertTrue('Some-Header' in request.headers)
-        self.assertTrue(request.header['Some-Header'] == 'some value')
-        self.assertTrue(request.header['Some-Other-Header'] == 'some other value')
+        self.assertTrue(request.headers['Some-Header'] == 'some value')
+        self.assertTrue(request.headers['Some-Other-Header'] == 'some other value')
     
     def test_header_access_special(self):
         e = {}
@@ -87,8 +87,8 @@ class TestRequest(unittest.TestCase):
         request.bind(e)
         request['CONTENT_TYPE'] = 'test'
         request['CONTENT_LENGTH'] = '123'
-        self.assertEqual(request.header['Content-Type'], 'test')
-        self.assertEqual(request.header['Content-Length'], '123')
+        self.assertEqual(request.headers['Content-Type'], 'test')
+        self.assertEqual(request.headers['Content-Length'], '123')
 
     def test_cookie(self):
         """ Environ: COOKIES """ 
